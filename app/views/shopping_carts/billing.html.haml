%body
  %section.section-billing
    .container
      %header.tablist-holder
        %ul.tablist.pull-left
          %li.page-pointer
          %li
            %a.tablist-active{:href => "#"} SHIPPING AND BILLING
          %li
            %a{:href => "#"} PAYMENT
          %li
            %a{:href => "#"} REVIEW &amp; SUBMIT
        %ul.ul-saks-bag-top-list.pull-right
          %li
            %a{:href => "#"} 1.8777.551.7257
          %li
            %a{:href => "#"} Email
          %li
            %a{:href => "#"} Chat
          %li
            %a{:href => "#"} Shipping &amp; Returns
      / .tab holder ends
      / billing-section-body starts
      .billing-section-body.common-section-body
        .row
          .col-xs-12.col-sm-12.col-md-7
            -if @default_billing.blank? & @default_shipping.blank?
              .alert.alert-danger{:role => "alert"}
                %p
                  %strong There is no Default Shopping / Billing Address
            / sign-in-col starts
            .sign-in-col.sign-in-col-has-required
              -url = orders_path()
              = form_for(@order, url: url,method: :post, html: {class: "form-horizontal validate-form", "data-parsley-validate" => true, autocomplete: "off"}) do |form|
                / shipping-wrapper starts
                =form.fields_for :shipping_address,@order.shipping_address do |f|
                  =f.hidden_field :address_type,value: "shipping"
                  .shipping-wrapper
                    .row
                      .col-xs-12.col-sm-12
                        %h4 Shipping Address
                      .col-xs-12.col-sm-6.col-md-4
                        .name-input-block
                          / %label{:for => "f-name"} First Name
                          / %input#f-name{:required => "required", :type => "text"}/
                          %label{:for => "first-name"} First Name
                          = f.text_field :first_name, autofocus: true, autocomplete: "off", placeholder: "First Name", :required =>"required", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, First Name is required!",:id =>"first-name"
                      
                      .col-xs-12.col-sm-6.col-md-4
                        .name-input-block
                          %label{:for => "last-name"} Last Name
                          = f.text_field :last_name,autocomplete: "off", placeholder: "Last Name", :required =>"required", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Last Name is required!",:id =>"last_name"
                    / row ends
                    .row
                      .col-xs-12.col-sm-9.col-md-7
                        / %label{:for => "company-name"} Company Name
                        / %input#company-name{:required => "required", :type => "text"}/
                        %label{:for => "company-name"} Company Name
                        = f.text_field :company_name, autocomplete: "off", placeholder: "Company Name",:id =>"company-name"
                    / row ends
                    .row
                      .col-xs-12.col-sm-8
                        %label{:for => "address-1"} Address Line 1
                        / %input#address-1{:required => "required", :type => "text"}/
                        = f.text_field :street_address,autocomplete: "off", :required =>"required", placeholder: "Street Address", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Street Address is required!",:id =>"street-address"
                      .col-xs-12.col-sm-4
                        %label{:for => "address-2"} Address Line 2
                        / %input#address-2{:type => "text"}/
                        = f.text_field :street_address2,autocomplete: "off", placeholder: "Street Address2",:id =>"street-address2"
                    / row ends
                    .row
                      .col-xs-12.col-sm-6.col-md-4
                        %label{:for => "city"} City
                        / %input#city{:required => "required", :type => "text"}/
                        = f.text_field :city,autocomplete: "off", placeholder: "City",:id =>"city", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, City is required!",:id =>"city",:required =>"required"
                      .col-xs-12.col-sm-6.col-md-4.middle-state
                        .info-form-group
                          .account-input-block.state-selecting
                            %label{:for => "state"} State
                            / .select
                            /   %select#state{:name => "country", :required => "required"}
                            /     %option{:selected => "selected", :value => ""} Select A Title
                            /     %option{:value => "2"} Alzeria
                            /     %option{:value => "3"} Bangladesh
                            /     %option{:value => "4"} Brazil
                            /     %option{:value => "5"} Australia
                            /   .select__arrow.state-select
                            .select
                              =render :partial =>"state_select",locals: {country: "US", select_state: f.object.state,form: f,name: "order[shipping_address_attributes]"}
                              .select__arrow.state-select
                            / .select ends
                          / .account-input-block ends
                      .col-xs-12.col-sm-6.col-md-4
                        %label{:for => "zip-code"} Zip Code
                        = f.text_field :zip_code,autocomplete: "off", placeholder: "Zip code",:id =>"zip-code", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Zip code is required!",:required =>"required"
                    / row ends
                  / shipping-wrapper starts
                  .row
                    .col-xs-12.col-md-12
                      .make-address
                        .info-form-group.info-form-group-single
                          .checkbox-input-block
                            %label.control.control--checkbox.change-password-trigger{:for => "default-billing"}
                              Make This My Billing Address
                              =f.check_box :is_default_billing,:id =>"billing",class: "cb-default",:checked => "checked"
                              %span.control__indicator
                          / .checkbox-input-block ends
                      / make-address
                  / row ends
                  / billing-wrapper starts
                =form.fields_for :billing_address,@order.billing_address do |f|
                  =f.hidden_field :address_type,value: "billing"
                  .billing-wrapper.change-password-slideToggle
                    .row
                      .col-xs-12.col-sm-12
                        %h4 Billing Address
                      .col-xs-12.col-sm-6.col-md-4
                        .name-input-block
                          %label{:for => "first-name"} First Name
                          = f.text_field :first_name, autofocus: true, autocomplete: "off", placeholder: "First Name", :required =>"required", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, First Name is required!",:id =>"first-name"
                      / .col-xs-12.col-sm-6.col-md-1.mi
                      /   .name-input-block
                      /     %label{:for => "mi-2"} MI
                      /     %input#mi-2{:required => "required", :type => "text"}/
                      .col-xs-12.col-sm-6.col-md-4
                        .name-input-block
                          %label{:for => "last-name"} Last Name
                          = f.text_field :last_name,autocomplete: "off", placeholder: "Last Name", :required =>"required", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Last Name is required!",:id =>"last_name"
                    / .row ends
                    .row
                      .col-xs-12.col-sm-9.col-md-7
                        %label{:for => "company-name"} Company Name
                        = f.text_field :company_name, autocomplete: "off", placeholder: "Company Name",:id =>"company-name"
                    / .row ends
                    .row
                      .col-xs-12.col-sm-8
                        %label{:for => "address-1-1"} Address Line 1
                        = f.text_field :street_address,autocomplete: "off", :required =>"required", placeholder: "Street Address", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Street Address is required!",:id =>"street-address"
                      .col-xs-12.col-sm-4
                        %label{:for => "address-2-1"} Address Line 2
                        = f.text_field :street_address2,autocomplete: "off", placeholder: "Street Address2",:id =>"street-address2"
                    / .row ends
                    .row
                      .col-xs-12.col-sm-6.col-md-4
                        %label{:for => "city-2"} City
                        = f.text_field :city,autocomplete: "off", placeholder: "City",:id =>"city", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, City is required!",:id =>"city",:required =>"required"
                      .col-xs-12.col-sm-6.col-md-4.middle-state
                        .info-form-group
                          .account-input-block.state-selecting
                            %label{:for => "state-2"} State
                            .select
                              =render :partial =>"state_select",locals: {country: "US", select_state: f.object.state,form: f,name: "order[billing_address_attributes]"}
                              .select__arrow.state-select
                            / .select ends
                          / .account-input-block ends
                      / col ends
                      .col-xs-12.col-sm-6.col-md-4
                        %label{:for => "zc-2"} Zip Code
                        = f.text_field :zip_code,autocomplete: "off", placeholder: "Zip code",:id =>"zip-code", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Zip code is required!",:required =>"required"
                    / .row ends
                  / billing-wrapper starts ends
                .row
                  .col-xs-12.col-sm-12
                    %h4 Contact Information
                    %p.email-phone Please enter an email address and a phone number whrer we can reach you about your order
                  .info-form-group.col-sm-6.col-md-8
                    %label{:for => "e-address"} Email Address
                    / %input#e-address{:required => "required", :type => "text"}/
                    = form.text_field :email, autofocus: true, autocomplete: "off", placeholder: "Email", :required =>"required", "data-parsley-type" =>"email", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Email is required!",:id =>"e-address"
                  / .info-form-group ends
                  .info-form-group.col-sm-6.col-md-4
                    %label{:for => "p-number"} Phone Number
                    / %input#p-number{:required => "required", :type => "text"}/
                    = form.text_field :phone,autocomplete: "off", :required =>"required", placeholder: "Telephone", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Telephone is required!",:id =>"telephone",:required =>"required"
                  / .info-form-group ends
                / .row ends
                .row
                  .col-xs-12.col-sm-12
                    .check-outing.text-right
                      %button{:type => "submit"} CONTINUE CHECKOUT
                / .row ends
              / form ends
            / sign-in-col starts ends
          / COL-7 ENDS
          .col-xs-12.col-sm-12.col-md-5
            .long-table
              / DESKTOP TABLE MARKUP
              %table.table.table-bordered.hidden-xs
                %thead
                  %tr
                    %th{:scope => "row"}="Order Summary (#{@shopping_cart.shopping_cart_items.count} Item)"
                    %th{:scope => "row"} Subtotal
                %tbody
                  -@shopping_cart.shopping_cart_items.each do |i|
                    %tr
                      %td.saks-bag-item{:class =>"td_#{i.id}"}
                        .saks-bag-item-img
                          -if i.has_color
                            %img{:alt => "", :src => show_image_cus_love(i.product_price_detail.product_image)}
                          -else
                            %img{:alt => "", :src => show_image_cus_love(i.product.main_image_url)}
                        .product-details-info
                          -if i.has_color
                            -product = i.product_price_detail.product
                          -else
                            -product = i.product
                          %strong=product.short_desc
                          -if i.size.present?
                            %p.pp-size
                              %b Size:
                              =i.size
                          -if i.has_color
                            %p.pp-color
                              %b Color:
                              =i.product_price_detail.color_name
                          %div
                            .saks-bag-item-qnt
                              %span=i.quantity
                          %p.pp-edit
                            %i.fa.fa-pencil{"aria-hidden" => "true"}
                            %a.edit-q-link{:href => "javascript:;","data-p"=>"td_#{i.id}"}Edit
                          %p.edit-quantity.hide
                            .form-edit.hide
                              =form_for(i,:url =>shopping_carts_path({:item_id => i.id}),:method =>:put,html: {class: "form-horizontal validate-form", "data-parsley-validate" => true, autocomplete: "off"},remote: true) do |f|
                                =f.text_field :quantity,:required =>"required", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Quantity is required!","data-parsley-type"=>"integer","data-parsley-type-message"=>"Quantity is number!"
                                =f.submit "update",class: ""
                                =f.button "Cancel",class: "btn-cancel-edit","data-p"=>"td_#{i.id}"
                          %p.pp-remove
                            %i.fa.fa-times{"aria-hidden" => "true"}
                            =link_to "Remove", shopping_carts_path({:item_id => i.id}), remote: true, method: :delete,data: { confirm: "Are you want to delete this item?" }
                        %td
                          $
                          =show_price_digit(i.price * i.quantity.to_i)
              / DESKTOP TABLE MARKUP ENDS
              / MOBILE TABLE MARKUP
              %table.table.table-bordered.visible-xs
                %tbody
                  -@shopping_cart.shopping_cart_items.each do |i|
                    %tr
                      %th{:scope => "row"}="Order Summary (#{@shopping_cart.shopping_cart_items.count} Item)"
                      %td.saks-bag-item
                        .saks-bag-item-img
                          -if i.has_color
                            %img{:alt => "", :src => show_image_cus_love(i.product_price_detail.product_image)}
                          -else
                            %img{:alt => "", :src => show_image_cus_love(i.product.main_image_url)}
                        .product-details-info
                          -if i.has_color
                            -product = i.product_price_detail.product
                          -else
                            -product = i.product
                          %strong=product.short_desc
                          -if i.size.present?
                            %p.pp-size
                              %b Size:
                              =i.size
                          -if i.has_color
                            %p.pp-color
                              %b Color:
                              =i.product_price_detail.color_name
                          %div{:class =>"td_#{i.id}"}
                            .saks-bag-item-qnt
                              %span=i.quantity
                          %p.pp-edit
                            %i.fa.fa-pencil{"aria-hidden" => "true"}
                            %a{:href => "#"} Edit
                          %p.edit-quantity.hide
                            .form-edit.hide
                              =form_for(i,:url =>shopping_carts_path({:item_id => i.id}),:method =>:put,html: {class: "form-horizontal validate-form", "data-parsley-validate" => true, autocomplete: "off"},remote: true) do |f|
                                =f.text_field :quantity,:required =>"required", "data-parsley-trigger" => "change", "data-parsley-required-message" => "Oops, Quantity is required!","data-parsley-type"=>"integer","data-parsley-type-message"=>"Quantity is number!"
                                =f.submit "update",class: ""
                                =f.button "Cancel",class: "btn-cancel-edit","data-p"=>"td_#{i.id}"
                          %p.pp-remove
                            %i.fa.fa-times{"aria-hidden" => "true"}
                            =link_to "Remove", shopping_carts_path({:item_id => i.id}), remote: true, method: :delete,data: { confirm: "Are you want to delete this item?" }
                        / .product-details-info ends
                    %tr
                      %th{:scope => "row"} Subtotal
                      %td
                        $
                        =show_price_digit(i.price * i.quantity.to_i)
              / MOBILE TABLE MARKUP ENDS
              .table-btm-qt
                / %p
                /   %strong Shopping To
                /   %span.c-name Mr. Jeffrey Johnso
                /   %span.c-street 3343 Waldeck Street
                /   %span.c-tx Arlington, TX 75760
                /   %span.c-city US
                /   %span.c-contact 817-465-4744
                /   %span
                /     %i.fa.fa-pencil{"aria-hidden" => "true"}
                /     %a{:href => "#"} Edit
                / %p
                /   %strong Shopping Method :
                /   Standard (Est Delivery 10/10/16)
                /   %span
                /     %i.fa.fa-pencil{"aria-hidden" => "true"}
                /     %a{:href => "#"} Edit
              / .table-btm-qt ends
              %table.checkout-table
                %tr
                  %td
                    %b Item Total
                  %td.text-right
                    $
                    =show_price_digit(@shopping_cart.total)
                %tr
                  %td
                    %b Gift Wrap
                  %td.text-right $0.00
                %tr
                  %td
                    %b Estimated Shopping &amp; Handling
                  %td.text-right $0.00
                %tr
                  %td
                    %b Total Before Tax
                  %td.text-right
                    $
                    =show_price_digit(@shopping_cart.total)
                %tr.checkout-table-last
                  %td
                    %b Estimated Tax
                  %td.text-right $0.00
                %tr.checkout-table-total
                  %td
                    %b Estimated Total
                  %td.text-right
                    %b
                      $
                      =show_price_digit(@shopping_cart.total)
              / CHECKOUT TABLE ENDS
            / LONG TABLE ENDS
          / COL-5 ENDS
        / ROW ENDS
      / common-section-body
    / .container ends
